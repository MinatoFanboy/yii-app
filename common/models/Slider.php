<?php

namespace common\models;

use Yii;
use yii\helpers\Html;
use common\models\myAPI;
use yii\web\UploadedFile;
use yii\web\HttpException;
use yii\helpers\FileHelper;

/**
 * @property int $id
 * @property string|null $title
 * @property string|null $content
 * @property string|null $link
 * @property string|null $representation
 *
 * @property PictureSlider[] $pictureSliders
 */
class Slider extends \yii\db\ActiveRecord
{
    public $pictures;

    public static function tableName()
    {
        return 'slider';
    }

    public function rules()
    {
        return [
            [['title'], 'required', 'message' => '{attribute} không được để trống'],
            [['content', 'link', 'representation'], 'string'],
            [['title'], 'string', 'max' => 100],
            [['pictures'], 'safe'],
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Tiêu đề',
            'content' => 'Nội dung',
            'link' => 'Link',
            'pictures' => 'Ảnh slider',
        ];
    }

    public function getPictureSliders()
    {
        return $this->hasMany(PictureSlider::className(), ['slider_id' => 'id']);
    }

    public function beforeDelete()
    {
        foreach ($this->pictureSliders as $pictureSlider) {
            $pictureSlider->delete();
        }

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $files = UploadedFile::getInstances($this, 'pictures');
        if (!empty($files)) {
            foreach ($files as $key => $file) {
                $path = dirname(dirname(__DIR__)) . '/images/slider/';
                $link = date('Y/m/d') . '/' . $key . '_' . myAPI::createCode($this->title) . myAPI::get_extension_image($file->type);

                $picture_slider = new PictureSlider();
                $picture_slider->file = $link;
                $picture_slider->slider_id = $this->id;
                if (!$picture_slider->save()) {
                    throw new HttpException(500, Html::errorSummary($picture_slider));
                } else {
                    if (FileHelper::createDirectory($path . date('Y/m/d') . '/', $mode = 0775, $recursive = true)) {
                        $file->saveAs($path . $link);
                    }
                    if (!$this->representation) {
                        $this->updateAttributes(['representation' => $link]);
                    }
                }
            }
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
