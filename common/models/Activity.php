<?php

namespace common\models;

use Yii;
use yii\db\ActiveRecord;

/**
 * @property int $id
 * @property string $name
 * @property string $controller_action
 * @property string $group
 * 
 * @property Permission[] $permission
 */
class Activity extends ActiveRecord
{
    public static function tableName()
    {
        return '{{%activity}}';
    }

    public function rules()
    {
        return [
            [['name', 'controller_action', 'group'], 'required', 'message' => '{attribute} không được để trống'],
            [['name', 'controller_action'], 'string', 'max' => 100],
            [['controller_action'], 'unique', 'message' => '{attribute} đã tồn tại'],
            [['name'], 'duplicateAttribute'],
        ];
    }

    public function duplicateAttribute($attribute, $params)
    {
        if (!$this->hasErrors()) {
            $activity = self::find()->andFilterWhere(["name" => $this->name, 'controller_action' => $this->controller_action,
                'group' => $this->group]);
            if(!$this->isNewRecord){
                $activity->andFilterWhere(['<>', 'id', $this->id]);
            }

            if(!is_null($activity->one())){
                $this->addError($attribute, "Chức năng đã tồn tại");
            }
        }
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Tên',
            'controller_action' => 'Controller Action',
            'group' => 'Nhóm',
        ];
    }

    public function getPermission()
    {
        return $this->hasMany(Permission::className(), ['activity_id' => 'id']);
    }

    public function beforeDelete()
    {
        Permission::deleteAll(['activity_id' => $this->id]);

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
